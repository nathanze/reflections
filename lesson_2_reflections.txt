What happens when you initialize a repository? Why do you need to do it?

When I initialize a repository, it creates a hidden folder containing the files necessary to 
track the commits I make.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is different from the working directory in that it does not necessarily include all of the files 
in the directory. It is just a temporary place that holds the file(s) that are being prepared to commit to the 
repository. It allows you to make commits that only affect the files that logically should be included in the commit
together.

How can you use the staging area to make sure you have one commit per logical change?

I can use the staging area to include only the files related to the logical change before making the commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

It would be helpful when trying out a new feature (or several different new features) that I'm not sure I want to keep. It would also allow me to experiement while keeping a working copy.

How do the diagrams help you visualize the branch structure?

It helps me to see how the different commits relate to each other.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The changes from both branches are merged into one file. It is represented in the diagram that way because 
both branches come together again.